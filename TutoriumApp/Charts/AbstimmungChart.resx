<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WiJaWloiWVlZK1tbW/9aWlo+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpa
        Wj5bW1v/ZmZmCgAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbj1tbW7cAAAAAAAAAAFtbW7dbW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1paWj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWlpaPltbW/9mZmYKAAAAAAAAAAAAAAAAAAAAAAAAAABbW1uPW1tbtwAAAAAAAAAAYGBgGFpa
        WiJaWloiWlpaIlpaWiJaWloiWlpaIlpaWiJaWloiYGBgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABaWlo+W1tb/2ZmZgoAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW49bW1u3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWj5bW1v/ZmZmCgAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbj1tb
        W7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaPltbW/9mZmYKAAAAAAAAAAAAAAAAAAAAAAAA
        AABbW1uPW1tbtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWlo+W1tb/2ZmZgoAAAAAAAAAAAAA
        AAAAAAAAAAAAAFtbW49bW1u3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWj5bW1v/ZmZmCgAA
        AAAAAAAAAAAAAAAAAAAAAAAAW1tbj1tbW7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpaPltb
        W/9mZmYKAAAAAAAAAAAAAAAAAAAAAAAAAABbW1uPW1tbtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABaWlo+W1tb/2ZmZgoAAAAAAAAAAAAAAAAAAAAAAAAAAFtbW49bW1u3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFpaWj5bW1v/XFxczltbW8xbW1vMW1tbzFtbW8xbW1vMW1tb6VtbW7cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWFhYHVpaWndaWlp3Wlpad1paWndaWlp3Wlpad1paWndaWlp3XFxcVgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgDAMAZ+37fmft+35n7ft+Z+37fmft+35n7ft+Z+37fmft+35n7ft+Z+3
        7fmft+35n7ft+Z+wDfmfv/35n7/9+Z+//fmfv/35n7/9+Z+//fmAP/35///9+f///fn///35///9+f//
        /fn///35///9+f///AH///////////////8=
</value>
  </data>
</root>